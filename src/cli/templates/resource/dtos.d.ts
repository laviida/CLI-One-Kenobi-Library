export declare const createDto = "export class Create[entity]Dto {}";
export declare const updateDto = "import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class Update[entity]Dto {\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  id: number;\n}\n";
export declare const paginationDto = "import {\n  [entity],\n  [entity]OrderBy,\n  [entity]Relations,\n} from '@controller/[filename]/entities/[filename].entity';\nimport { PageOptionsDto } from '@core/database/dto/pagination-options.dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsEnum, IsOptional } from 'class-validator';\n\nexport class [entity]PageOptionsDto extends PageOptionsDto {\n  @ApiProperty({ enum: [entity]OrderBy, default: [entity]OrderBy.id, required: false })\n  @IsEnum([entity]OrderBy)\n  @IsOptional()\n  readonly orderBy?: [entity]OrderBy = [entity]OrderBy.id;\n\n  @ApiProperty({\n    required: false,\n    isArray: true,\n    enum: [entity]Relations,\n    default: [],\n  })\n  @IsEnum([entity]Relations, { each: true })\n  @IsOptional()\n  @Transform((data) => (Array.isArray(data.value) ? data.value : [data.value]))\n  readonly relations?: Array<[entity]Relations> = [];\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  where?: Partial<[entity]>;\n}\n\n";
